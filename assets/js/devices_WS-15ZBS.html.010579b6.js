"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[55476],{5665:(e,a,t)=>{t.r(a),t.d(a,{comp:()=>l,data:()=>d});var o=t(38178);const r={},l=(0,t(33649).A)(r,[["render",function(e,a){const t=(0,o.g2)("RouteLink");return(0,o.uX)(),(0,o.CE)("div",null,[a[7]||(a[7]=(0,o.Lk)("h1",{id:"climax-ws-15zbs",tabindex:"-1"},[(0,o.Lk)("a",{class:"header-anchor",href:"#climax-ws-15zbs"},[(0,o.Lk)("span",null,"Climax WS-15ZBS")])],-1)),(0,o.Lk)("table",null,[a[6]||(a[6]=(0,o.Lk)("thead",null,[(0,o.Lk)("tr",null,[(0,o.Lk)("th"),(0,o.Lk)("th")])],-1)),(0,o.Lk)("tbody",null,[a[2]||(a[2]=(0,o.Lk)("tr",null,[(0,o.Lk)("td",null,"Model"),(0,o.Lk)("td",null,"WS-15ZBS")],-1)),(0,o.Lk)("tr",null,[a[1]||(a[1]=(0,o.Lk)("td",null,"Vendor",-1)),(0,o.Lk)("td",null,[(0,o.bF)(t,{to:"/supported-devices/#v=Climax"},{default:(0,o.k6)(()=>a[0]||(a[0]=[(0,o.eW)("Climax")])),_:1,__:[0]})])]),a[3]||(a[3]=(0,o.Lk)("tr",null,[(0,o.Lk)("td",null,"Description"),(0,o.Lk)("td",null,"Water leak sensor")],-1)),a[4]||(a[4]=(0,o.Lk)("tr",null,[(0,o.Lk)("td",null,"Exposes"),(0,o.Lk)("td",null,"water_leak, battery_low, tamper")],-1)),a[5]||(a[5]=(0,o.Lk)("tr",null,[(0,o.Lk)("td",null,"Picture"),(0,o.Lk)("td",null,[(0,o.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/WS-15ZBS.png",alt:"Climax WS-15ZBS"})])],-1))])]),a[8]||(a[8]=(0,o.Fv)('<h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="water-leak-binary" tabindex="-1"><a class="header-anchor" href="#water-leak-binary"><span>Water leak (binary)</span></a></h3><p>Indicates whether the device detected a water leak. Value can be found in the published state on the <code>water_leak</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>true</code> water leak is ON, if <code>false</code> OFF.</p><h3 id="battery-low-binary" tabindex="-1"><a class="header-anchor" href="#battery-low-binary"><span>Battery low (binary)</span></a></h3><p>Indicates if the battery of this device is almost empty. Value can be found in the published state on the <code>battery_low</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>true</code> battery low is ON, if <code>false</code> OFF.</p><h3 id="tamper-binary" tabindex="-1"><a class="header-anchor" href="#tamper-binary"><span>Tamper (binary)</span></a></h3><p>Indicates whether the device is tampered. Value can be found in the published state on the <code>tamper</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>true</code> tamper is ON, if <code>false</code> OFF.</p>',7))])}]]),d=JSON.parse('{"path":"/devices/WS-15ZBS.html","title":"Climax WS-15ZBS control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"Climax WS-15ZBS control via MQTT","description":"Integrate your Climax WS-15ZBS via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2021-02-28T13:58:01.000Z"},"git":{"updatedTime":1752868690000,"contributors":[{"name":"joaopedrocg27","username":"joaopedrocg27","email":"30077840+joaopedrocg27@users.noreply.github.com","commits":1,"url":"https://github.com/joaopedrocg27"}],"changelog":[{"hash":"2b838cad4ddb35b722d1751faed21be925433bf6","time":1752868690000,"email":"30077840+joaopedrocg27@users.noreply.github.com","author":"João Gonçalves","message":"feat: Added image for LF-GAZ150B6250-24 (#3951)"}]},"filePathRelative":"devices/WS-15ZBS.md"}')}}]);